name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      selenium:
        image: selenium/standalone-chrome:latest  # Selenium Chrome standalone service
        options: --shm-size 2g  # Increase shared memory size for Chrome stability
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check Docker version
        run: docker --version

      - name: Build Docker image
        run: |
          docker build -t my-selenium-app:latest .  # Build the Docker image

      - name: Save Docker image
        run: docker image save my-selenium-app:latest | xz -z -e -7 -T0 > selenium.xz

      - name: List Files
        run: ls -la  # Verify that selenium.xz was created

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}  # Use the run number as the version tag
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Automatically available in Actions

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: selenium.xz  # Path to the compressed Docker image
          asset_name: selenium.xz
          asset_content_type: application/x-xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run pytest with HTML report
        run: |
            pytest --html=report.html --self-contained-html  # Run pytest and generate report
    
      - name: Upload HTML report as artifact
        uses: actions/upload-artifact@v3
        with:
            name: pytest-report  # The name of the artifact
            path: report.html  # Path to the HTML report file
    
      - name: Display test results in GitHub UI
        uses: actions/upload-artifact@v3
        with:
            name: pytest-report
            path: report.html  # Upload the generated HTML report as an artifact
      - name: Make deploy script executable
        run: chmod +x deploy_script.sh
      
      - name: Run deploy script
        run: ./deploy_script.sh

        
