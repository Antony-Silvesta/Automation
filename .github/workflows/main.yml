name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      selenium:
        image: selenium/standalone-chrome:latest  # Selenium Chrome standalone service
        options: --shm-size 2g  # Increase shared memory size for Chrome stability
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

     
      - name: Check Docker version
        run: docker --version

      - name: Build Docker image
        run: docker build -t my-selenium-app:latest .  # Build the Docker image


      - name: Save Docker image
        run: docker image save my-selenium-app:latest | xz -z -e -7 -T0 > selenium.xz

      - name: List Files
        run: ls -la  # Verify that selenium.xz was created

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ github.run_number }}"  # Use run number as version tag for simplicity
          release_name: "Release ${{ github.run_number }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: selenium.xz  # Path to compressed Docker image
          asset_name: selenium.xz
          asset_content_type: application/x-xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Selenium test
        run: python Google.py  # Replace with actual test script

      - name: Save test results
        run: python Google.py > test_results.log  # Save test output to a log file

      - name: Display test results
        run: cat test_results.log  # Show the test results in the GitHub Actions log

      - name: Deploy application
        run: run deploy

        
